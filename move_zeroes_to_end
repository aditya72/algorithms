# Algo used is two pointer approach to swap zeros to end
# Time complexity O(n) and space complexity is O(1)

class Solution:
    def moveZeroes(self, nums):
         # Find occurence of first zero
        j = -1
        for i in range(0,len(nums)):
            if nums[i] == 0:
                j = i
                break
        # if j is not -1 meaning there is no zeros hence no change
        if j!=-1:
            for i in range(j+1,len(nums)):
                if nums[i]!=0:
                    temp = nums[j]
                    nums[j] = nums[i]
                    nums[i] = temp
                    j+=1
        return nums

                   
